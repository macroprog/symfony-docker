version : "3.4"

services:
    php       :
        build      :
            context: ""
            target : symfony_php_debug
            args   :
                SYMFONY_VERSION: ${SYMFONY_VERSION:-}
                STABILITY      : ${STABILITY:-stable}
        restart    : unless-stopped
        healthcheck:
            interval    : 10s
            timeout     : 3s
            retries     : 3
            start_period: 30s
        networks   :
            - symfony_iloh
        environment:
            # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
            DATABASE_URL       : postgresql://${POSTGRES_USER:-symfony}:${POSTGRES_PASSWORD:-ChangeMe}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-13}
            # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
            MERCURE_PUBLISH_URL: ${MERCURE_URL:-http://caddy/.well-known/mercure}
            SYMFONY_VERSION    :

    db        :
        image      : mysql:5.7
        volumes    :
            - db_data:/var/lib/mysql
        restart    : unless-stopped
        ports      :
            - '3306:3306'
        environment:
            MYSQL_ROOT_PASSWORD: Passw0rd!
            MYSQL_DATABASE     : iloh
            MYSQL_USER         : iloh
            MYSQL_PASSWORD     : Passw0rd!
        networks   :
            - symfony_iloh

    phpmyadmin:
        depends_on :
            - db
        image      : phpmyadmin/phpmyadmin
        restart    : unless-stopped
        ports      :
            - '8080:80'
        environment:
            PMA_HOST           : db
            MYSQL_ROOT_PASSWORD: Passw0rd!
        networks   :
            - symfony_iloh

    caddy     :
        build      :
            context: ""
            target : symfony_caddy
        environment:
            SERVER_NAME           : ${SERVER_NAME:-localhost, caddy:80}
            MERCURE_PUBLISHER_JWT : ${MERCURE_PUBLISHER_JWT:-!ChangeMe!}
            MERCURE_SUBSCRIBER_JWT: ${MERCURE_SUBSCRIBER_JWT:-!ChangeMe!}
        restart    : unless-stopped
        ports      :
            - "80:80"
            - "443:443"
        networks   :
            - symfony_iloh
        volumes    :
            - caddy_data:/data
            - caddy_config:/config

volumes :
    caddy_data  :
    caddy_config:
    db_data     :

networks:
    symfony_iloh:
